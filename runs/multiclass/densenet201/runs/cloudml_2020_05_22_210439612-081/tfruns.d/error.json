{
  "message": "Exception: URL fetch failure on https://github.com/keras-team/keras-applications/releases/download/densenet/densenet201_weights_tf_dim_ordering_tf_kernels_notop.h5: 500 -- Internal Server Error\n\nDetailed traceback: \n  File \"//usr/local/lib/python2.7/dist-packages/tensorflow_core/python/keras/applications/__init__.py\", line 49, in wrapper\n    return base_fun(*args, **kwargs)\n  File \"//usr/local/lib/python2.7/dist-packages/tensorflow_core/python/keras/applications/densenet.py\", line 46, in DenseNet201\n    return densenet.DenseNet201(*args, **kwargs)\n  File \"//usr/local/lib/python2.7/dist-packages/keras_applications/densenet.py\", line 339, in DenseNet201\n    **kwargs)\n  File \"//usr/local/lib/python2.7/dist-packages/keras_applications/densenet.py\", line 292, in DenseNet\n    file_hash='c13680b51ded0fb44dff2d8f86ac8bb1')\n  File \"//usr/local/lib/python2.7/dist-packages/tensorflow_core/python/keras/utils/data_utils.py\", line 253, in get_file\n    raise Exception(error_msg.format(origin, e.code, e.msg))\n",
  "traceback": ["py_call_impl(callable, dots$args, dots$keywords)", "keras$applications$DenseNet201(include_top = include_top, weights = weights, \n    input_tensor = input_tensor, input_shape = normalize_shape(input_shape), \n    pooling = pooling, classes = as.integer(classes))", "keras::application_densenet201(include_top = FALSE, weights = \"imagenet\", \n    input_shape = c(224, 224, 3))", "eval(ei, envir)", "eval(ei, envir)", "withVisible(eval(ei, envir))", "source(file = file, local = envir, echo = echo, encoding = encoding)", "withCallingHandlers({\n    source(file = file, local = envir, echo = echo, encoding = encoding)\n    write_run_property(\"completed\", TRUE)\n}, error = function(e) {\n    write_run_metadata(\"error\", list(message = e$message, traceback = capture_stacktrace(sys.calls())))\n    stop(e)\n})", "force(expr)", "tryCatch({\n    tfruns::training_run(file = deploy$entrypoint, context = deploy$context, \n        config = \"cloudml\", flags = deploy$overlay, encoding = \"UTF-8\", \n        echo = TRUE, view = FALSE, run_dir = run_dir)\n}, error = function(e) {\n    training_error <<- e\n})"]
}
